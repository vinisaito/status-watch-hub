import { useWebSocketTimer } from "@/hooks/useWebSocketTimer";

export const ActionTable = ({ alertData, onUpdateAcknowledgment, loading }: ActionTableProps) => {
  const timers = useWebSocketTimer("wss://rsgjd6wsza.execute-api.us-east-1.amazonaws.com/dev/");

  const formatRemainingTime = (startTime: number, duration: number) => {
    const now = Math.floor(Date.now() / 1000);
    const elapsed = now - startTime;
    const remaining = duration - elapsed;
    if (remaining <= 0) return "00:00";

    const min = String(Math.floor(remaining / 60)).padStart(2, "0");
    const sec = String(remaining % 60).padStart(2, "0");
    return `${min}:${sec}`;
  };














<TableCell>
  <div className="flex flex-col items-center gap-1">
    {timers[alert.chamado] ? (
      <>
        <span className="text-xs font-mono text-orange-600 flex items-center gap-1">
          <Timer className="h-3 w-3" />
          {formatRemainingTime(
            timers[alert.chamado].startTime,
            timers[alert.chamado].duration
          )}
        </span>
        <Badge variant="secondary" className="text-xs">
          {timers[alert.chamado].status}
        </Badge>
      </>
    ) : (
      <span className="text-xs text-muted-foreground">--:--</span>
    )}
  </div>
</TableCell>
