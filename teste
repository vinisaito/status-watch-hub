import { useCallback } from 'react';
import { HistoricoAcionamento } from '../types';
import { formatDate } from '../utils';

/**
 * Hook específico para gerenciamento do histórico de acionamentos
 */
export const useHistoricoAcionamentos = (timers: Map<number, any>) => {

  /**
   * Monta o histórico de acionamentos do chamado
   * @param chamadoNum Número do chamado
   * @returns Array com histórico dos acionamentos
   */
  const getHistoricoAcionamentos = useCallback((chamadoNum: number): HistoricoAcionamento[] => {
    const timerState = timers.get(chamadoNum);
    if (!timerState) return [];

    const historico: HistoricoAcionamento[] = [];

    // Percorre todos os níveis e coleta informações do histórico
    for (let nivel = 1; nivel <= 5; nivel++) {
      const operador = timerState[`level${nivel}_operador`] || '';
      const pessoaAcionada = timerState[`level${nivel}_pessoaAcionada`] || '';
      const status = timerState[`level${nivel}_statusAcionamento`] || '';
      const observacao = timerState[`level${nivel}_observacao`] || '';
      const dataHora = timerState[`level${nivel}_dataHora`] || '';
      const updatedAt = timerState[`level${nivel}_updatedAt`] || '';

      if (operador || pessoaAcionada || status || observacao || dataHora) {
        historico.push({
          operador,
          pessoaAcionada,
          status,
          observacao,
          dataHora,
          updatedAt: formatDate(updatedAt),
          nivel,
        });
      }
    }
    return historico;
  }, [timers]);

  return {
    getHistoricoAcionamentos
  };
};
