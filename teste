import { AlertTriangle, Zap, Group, Calendar, Info, Flame, Check, XCircle } from 'lucide-react';
import { Dialog, DialogContent, DialogHeader, DialogTitle } from '@/components/ui/dialog';

interface AlertData {
  id: string;
  chamado: string;
  tipo_chamado: string;
  grupo_chamado: string;
  status_chamado: string;
  abertura_chamado: string;
  resumo_chamado: string;
  severidade_chamado: string;
  acionado: string;
  chat: boolean;
}

interface ChamadoModalProps {
  open: boolean;
  onOpenChange: (open: boolean) => void;
  selectedIncident: AlertData | null;
  observacoesData: Map<string, any>;
  formatDate: (date: string) => string;
}

export const ChamadoModal = ({
  open,
  onOpenChange,
  selectedIncident,
  observacoesData,
  formatDate
}: ChamadoModalProps) => {
  if (!selectedIncident) return null;

  const getStatusBadgeClass = (chat: boolean) =>
    chat
      ? 'bg-green-500/90 text-white border-green-500/50 shadow-md'
      : 'bg-red-500/90 text-white border-red-500/50 shadow-md';

  const getStatusIcon = (chat: boolean) =>
    chat ? <Check className="h-4 w-4" /> : <XCircle className="h-4 w-4" />;

  const getStatusText = (chat: boolean) =>
    chat ? 'ACIONADO VIA CHAT' : 'NÃO ACIONADO VIA CHAT';

  const obsData = observacoesData.get(selectedIncident.chamado);

  return (
    <Dialog open={open} onOpenChange={onOpenChange}>
      <DialogContent className="max-w-3xl max-h-[80vh] overflow-y-auto">
        <DialogHeader className="pb-6 border-b">
          <DialogTitle>
            <div className="relative overflow-hidden rounded-2xl p-6 mb-4 bg-gradient-to-r from-primary to-primary/80">
              <div className="relative z-10 flex items-start gap-4">
                <div className="p-3 rounded-xl bg-white/20 backdrop-blur-sm border border-white/30 shadow-lg">
                  {selectedIncident.tipo_chamado === "Solicitação" ? (
                    <Zap className="h-6 w-6 text-white drop-shadow-sm" />
                  ) : selectedIncident.tipo_chamado === "Incidente" ? (
                    <AlertTriangle className="h-6 w-6 text-white drop-shadow-sm" />
                  ) : (
                    <Zap className="h-6 w-6 text-white drop-shadow-sm" />
                  )}
                </div>

                <div className="flex-1">
                  <div className="flex items-center gap-3 mb-2">
                    <span className="text-2xl font-bold text-white drop-shadow-sm">
                      {selectedIncident.chamado}
                    </span>
                    <div className="h-1 flex-1 bg-white/20 rounded-full">
                      <div className="h-full w-3/4 bg-white/40 rounded-full"></div>
                    </div>
                  </div>

                  <h2 className="text-lg font-medium text-white/95 leading-relaxed drop-shadow-sm">
                    {selectedIncident.resumo_chamado}
                  </h2>
                </div>
              </div>

              <div className="relative z-10 flex flex-wrap items-center gap-3 mt-6">
                <div className={`${getStatusBadgeClass(selectedIncident.chat)} flex items-center gap-2 px-4 py-2 rounded-xl 
                    backdrop-blur-sm border border-white/20 shadow-lg`}>
                  {getStatusIcon(selectedIncident.chat)}
                  <span className="font-medium text-sm">
                    {getStatusText(selectedIncident.chat)}
                  </span>
                </div>

                <div className="bg-white/20 text-white flex items-center gap-2 px-4 py-2 rounded-xl 
                    backdrop-blur-sm border border-white/30 shadow-lg">
                  <span className="font-medium text-sm">{selectedIncident.tipo_chamado}</span>
                </div>
              </div>
            </div>
          </DialogTitle>
        </DialogHeader>

        <div className="grid grid-cols-1 md:grid-cols-2 gap-6 mt-6">
          <div className="space-y-4">
            <div className="group relative overflow-hidden rounded-xl bg-card border p-5 
                shadow-lg hover:shadow-xl transition-all duration-300 hover:-translate-y-1">
              <div className="absolute top-0 left-0 w-full h-1 bg-gradient-to-r from-primary to-blue-500"></div>
              <div className="flex items-start gap-4">
                <div className="p-2 rounded-lg bg-primary/10 group-hover:bg-primary/20 transition-colors duration-300">
                  <Group className="h-5 w-5 text-primary" />
                </div>
                <div className="flex-1">
                  <p className="text-sm text-muted-foreground font-medium mb-1">Grupo</p>
                  <p className="font-bold text-foreground text-lg">{selectedIncident.grupo_chamado}</p>
                </div>
              </div>
            </div>

            <div className="group relative overflow-hidden rounded-xl bg-card border p-5 
                shadow-lg hover:shadow-xl transition-all duration-300 hover:-translate-y-1">
              <div className="absolute top-0 left-0 w-full h-1 bg-gradient-to-r from-green-500 to-emerald-500"></div>
              <div className="flex items-start gap-4">
                <div className="p-2 rounded-lg bg-green-500/10 group-hover:bg-green-500/20 transition-colors duration-300">
                  <Calendar className="h-5 w-5 text-green-600" />
                </div>
                <div className="flex-1">
                  <p className="text-sm text-muted-foreground font-medium mb-1">Data de Abertura</p>
                  <p className="font-bold text-foreground text-lg">{formatDate(selectedIncident.abertura_chamado)}</p>
                </div>
              </div>
            </div>

            {obsData?.CreatedAt && (
              <div className="group relative overflow-hidden rounded-xl bg-card border p-5 
                  shadow-lg hover:shadow-xl transition-all duration-300 hover:-translate-y-1">
                <div className="absolute top-0 left-0 w-full h-1 bg-gradient-to-r from-purple-500 to-pink-500"></div>
                <div className="flex items-start gap-4">
                  <div className="p-2 rounded-lg bg-purple-500/10 group-hover:bg-purple-500/20 transition-colors duration-300">
                    <Calendar className="h-5 w-5 text-purple-600" />
                  </div>
                  <div className="flex-1">
                    <p className="text-sm text-muted-foreground font-medium mb-1">Data da Confirmação</p>
                    <p className="font-bold text-foreground text-lg">{formatDate(obsData.CreatedAt)}</p>
                  </div>
                </div>
              </div>
            )}
          </div>

          <div className="space-y-4">
            <div className="group relative overflow-hidden rounded-xl bg-card border p-5 
                shadow-lg hover:shadow-xl transition-all duration-300 hover:-translate-y-1">
              <div className="absolute top-0 left-0 w-full h-1 bg-gradient-to-r from-blue-500 to-cyan-500"></div>
              <div className="flex items-start gap-4">
                <div className="p-2 rounded-lg bg-blue-500/10 group-hover:bg-blue-500/20 transition-colors duration-300">
                  <Info className="h-5 w-5 text-blue-600" />
                </div>
                <div className="flex-1">
                  <p className="text-sm text-muted-foreground font-medium mb-1">Status</p>
                  <p className="font-bold text-foreground text-lg">{selectedIncident.status_chamado}</p>
                </div>
              </div>
            </div>

            <div className="group relative overflow-hidden rounded-xl bg-card border p-5 
                shadow-lg hover:shadow-xl transition-all duration-300 hover:-translate-y-1">
              <div className="absolute top-0 left-0 w-full h-1 bg-gradient-to-r from-red-500 to-orange-500"></div>
              <div className="flex items-start gap-4">
                <div className="p-2 rounded-lg bg-red-500/10 group-hover:bg-red-500/20 transition-colors duration-300">
                  <Flame className="h-5 w-5 text-red-600" />
                </div>
                <div className="flex-1">
                  <p className="text-sm text-muted-foreground font-medium mb-1">Severidade</p>
                  <p className="font-bold text-foreground text-lg">{selectedIncident.severidade_chamado}</p>
                </div>
              </div>
            </div>
          </div>
        </div>
      </DialogContent>
    </Dialog>
  );
};
