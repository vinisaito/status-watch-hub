import json
import boto3
import os
from datetime import datetime

# Nome da tabela
TABLE_NAME = os.environ.get("DYNAMODB_TABLE", "painelmonitoracao_obs")

dynamodb = boto3.resource("dynamodb", region_name="us-east-1")
table = dynamodb.Table(TABLE_NAME)

def lambda_handler(event, context):
    try:
        print("Evento recebido:", json.dumps(event))
        print("Usando tabela:", TABLE_NAME)

        body = event.get("body")
        if body:
            body = json.loads(body)
        else:
            return {
                "statusCode": 400,
                "body": json.dumps({"error": "Body da requisição vazio"})
            }

        chamado = body.get("chamado")   # chave primária
        observacao = body.get("observacao")
        status = body.get("status")

        if not chamado or not observacao or not status:
            return {
                "statusCode": 400,
                "body": json.dumps({
                    "error": "Campos obrigatórios: chamado, observacao, status"
                })
            }

        item = {
            "chamado": str(chamado),   # PK
            "observacao": observacao,
            "status": status,
            "createdAt": datetime.utcnow().isoformat()
        }

        print("Tentando salvar item:", item)
        table.put_item(Item=item)
        print("Item salvo com sucesso")

        return {
            "statusCode": 200,
            "body": json.dumps({"message": "Registro inserido com sucesso", "item": item})
        }

    except Exception as e:
        print("Erro na lambda:", str(e))
        return {
            "statusCode": 500,
            "body": json.dumps({"error": str(e)})
        }
