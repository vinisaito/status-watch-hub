import { Card } from "@/components/ui/card";
import { Progress } from "@/components/ui/progress";
import { cn } from "@/lib/utils";
import { TrendingUp, CheckCircle2, Clock, AlertCircle, RotateCcw } from "lucide-react";

interface AreaReportProps {
  area: string;
  manager: string;
  performance: number;
  revenue: string;
  status: "excellent" | "good" | "attention";
  rdmStats: {
    concluidas: number;
    emAndamento: number;
    abertas: number;
    rollback: number;
  };
}

const statusConfig = {
  excellent: {
    color: "text-[hsl(var(--success))]",
    bgColor: "bg-[hsl(var(--success-light))]",
    label: "Excelente",
  },
  good: {
    color: "text-[hsl(var(--blue-accent))]",
    bgColor: "bg-[hsl(var(--blue-soft))]",
    label: "Bom",
  },
  attention: {
    color: "text-[hsl(var(--warning))]",
    bgColor: "bg-[hsl(var(--warning-light))]",
    label: "Atenção",
  },
};

export const AreaReport = ({ area, manager, performance, revenue, status, rdmStats }: AreaReportProps) => {
  const statusStyle = statusConfig[status];

  return (
    <Card className="group relative overflow-hidden border-[hsl(var(--border))] bg-card transition-all duration-300 hover:shadow-[var(--shadow-lg)] hover:-translate-y-1">
      <div className="absolute inset-0 bg-gradient-to-br from-transparent via-transparent to-[hsl(var(--blue-soft))]/30 opacity-0 group-hover:opacity-100 transition-opacity duration-500" />
      
      <div className="relative p-5">
        {/* Header */}
        <div className="flex items-start justify-between mb-4">
          <div>
            <h3 className="text-lg font-bold text-foreground mb-1">{area}</h3>
            <p className="text-sm text-muted-foreground">{manager}</p>
          </div>
          <div className={cn("px-3 py-1 rounded-full text-xs font-semibold", statusStyle.bgColor, statusStyle.color)}>
            {statusStyle.label}
          </div>
        </div>

        {/* Revenue */}
        <div className="mb-4">
          <p className="text-2xl font-bold text-foreground">{revenue}</p>
          <p className="text-xs text-muted-foreground uppercase tracking-wide">Receita</p>
        </div>

        {/* Performance */}
        <div className="mb-4">
          <div className="flex items-center justify-between mb-2">
            <span className="text-xs font-medium text-muted-foreground uppercase tracking-wide">
              Performance
            </span>
            <span className="text-sm font-bold text-[hsl(var(--blue-medium))]">
              {performance}%
            </span>
          </div>
          <div className="relative h-2 bg-[hsl(var(--neutral-100))] rounded-full overflow-hidden">
            <div
              className="h-full rounded-full bg-[hsl(var(--blue-medium))] transition-all duration-1000 ease-out"
              style={{ width: `${performance}%` }}
            />
          </div>
        </div>

        {/* RDM Stats */}
        <div className="grid grid-cols-2 gap-3 pt-4 border-t border-[hsl(var(--border))]">
          <div className="flex items-center gap-2">
            <CheckCircle2 className="h-4 w-4 text-[hsl(var(--success))]" />
            <div>
              <p className="text-sm font-bold text-foreground">{rdmStats.concluidas}</p>
              <p className="text-xs text-muted-foreground">Concluídas</p>
            </div>
          </div>
          <div className="flex items-center gap-2">
            <Clock className="h-4 w-4 text-[hsl(var(--warning))]" />
            <div>
              <p className="text-sm font-bold text-foreground">{rdmStats.emAndamento}</p>
              <p className="text-xs text-muted-foreground">Em Andamento</p>
            </div>
          </div>
          <div className="flex items-center gap-2">
            <AlertCircle className="h-4 w-4 text-[hsl(var(--blue-accent))]" />
            <div>
              <p className="text-sm font-bold text-foreground">{rdmStats.abertas}</p>
              <p className="text-xs text-muted-foreground">Abertas</p>
            </div>
          </div>
          <div className="flex items-center gap-2">
            <RotateCcw className="h-4 w-4 text-[hsl(var(--destructive))]" />
            <div>
              <p className="text-sm font-bold text-foreground">{rdmStats.rollback}</p>
              <p className="text-xs text-muted-foreground">Rollback</p>
            </div>
          </div>
        </div>
      </div>
    </Card>
  );
};
