import React, { forwardRef } from "react";
import { RDM } from "@/types/rdm";
import { CheckCircle2, XCircle, Clock } from "lucide-react";
import { cn } from "@/lib/utils";

interface RDMNodeProps {
  rdm: RDM;
  color: string;
  isFirst?: boolean;
  isLast?: boolean;
}

export const RDMNode = forwardRef<HTMLDivElement, RDMNodeProps>(
  ({ rdm, color, isFirst, isLast }: RDMNodeProps, ref) => {
  const getStatusIcon = () => {
    switch (rdm.status) {
      case 'executed':
        return <CheckCircle2 className="w-3.5 h-3.5" />;
      case 'failed':
        return <XCircle className="w-3.5 h-3.5" />;
      case 'pending':
        return <Clock className="w-3.5 h-3.5" />;
    }
  };

  const getStatusStyles = () => {
    switch (rdm.status) {
      case 'executed':
        return 'bg-success-light border-success text-success';
      case 'failed':
        return 'bg-destructive-light border-destructive text-destructive';
      case 'pending':
        return 'bg-timeline-node border-timeline-pending text-timeline-pending';
    }
  };

  return (
    <div className="relative flex flex-col items-center gap-2 group">
      {/* Indicadores Início/Fim - simplificados */}
      {(isFirst || isLast) && (
        <div className="absolute -top-6 text-[10px] font-medium text-muted-foreground">
          {isFirst ? 'Início' : 'Fim'}
        </div>
      )}

      {/* Node Circle - menor e mais limpo */}
      <div className="relative z-10" ref={ref}>
        <div 
          className={cn(
            "w-10 h-10 rounded-full border-2 flex items-center justify-center",
            "transition-all duration-200",
            "hover:scale-105",
            getStatusStyles()
          )}
        >
          {getStatusIcon()}
        </div>
      </div>

      {/* Info - mais compacta */}
      <div className="flex flex-col items-center gap-0.5">
        <div 
          className="font-semibold text-[11px] text-foreground"
        >
          {rdm.number}
        </div>
        <div className="text-[10px] text-muted-foreground">
          {rdm.time}
        </div>
      </div>

      {/* Tooltip simplificado */}
      {rdm.description && (
        <div className="absolute top-full mt-16 opacity-0 group-hover:opacity-100 transition-opacity duration-200 z-20 pointer-events-none">
          <div className="bg-card border border-border rounded-lg p-2.5 shadow-lg min-w-[160px] max-w-[220px]">
            <p className="text-[11px] text-foreground leading-relaxed">{rdm.description}</p>
          </div>
        </div>
      )}
    </div>
  );
});

RDMNode.displayName = "RDMNode";
