import { LucideIcon } from "lucide-react";
import { Card } from "@/components/ui/card";
import { Progress } from "@/components/ui/progress";
import { ArrowUp, ArrowDown } from "lucide-react";
import { cn } from "@/lib/utils";

interface MetricCardProps {
  title: string;
  value: string;
  trend: "up" | "down";
  icon: LucideIcon;
  color?: string; // tailwind class for text/bg e.g., 'text-blue-600 bg-blue-100'
  performance?: number; // optional percentage to render a progress bar
}

export const MetricCard = ({ title, value, trend, icon: Icon, color, performance }: MetricCardProps) => {
  const iconColor = color?.includes("text-") ? color : undefined;
  const bgTint = color?.includes("bg-") ? color : undefined;
  // Derive indicator color class from text color if provided (fallback to primary)
  // Expecting classes like 'text-blue-600' -> map to 'bg-blue-600'
  const indicatorClass = iconColor
    ? iconColor.replace("text-", "bg-")
    : "bg-primary";

  return (
    <Card className="p-6 hover:shadow-lg transition-shadow">
      <div className="flex items-start justify-between mb-4">
        <div className={cn("p-2 rounded-lg", bgTint ? bgTint : "bg-primary/10") }>
          <Icon className={cn("h-6 w-6", iconColor ? iconColor : "text-primary")} />
        </div>
      </div>
      <h3 className="text-sm font-medium text-muted-foreground mb-2">{title}</h3>
      <p className="text-3xl font-bold text-foreground mb-2">{value}</p>
      {typeof performance === 'number' && (
        <div className="mt-3">
          <div className="flex items-center justify-between mb-2">
            <span className="text-sm font-medium text-foreground">Performance</span>
            <span className="text-sm font-bold text-foreground">{Math.round(performance)}%</span>
          </div>
          <Progress value={performance} className="h-2" indicatorClassName={indicatorClass} />
        </div>
      )}
    </Card>
  );
};
