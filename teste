// Versão melhorada do modal chamadoModalOpen - substitua no seu código

<Dialog open={chamadoModalOpen} onOpenChange={setChamadoModalOpen}>
  <DialogContent className="max-w-3xl border-modal-border shadow-2xl animate-modal-in overflow-hidden"
    style={{ 
      background: 'var(--modal-gradient)', 
      boxShadow: 'var(--modal-shadow)',
      backdropFilter: 'blur(20px)'
    }}>
    <DialogHeader className="pb-6 border-b border-modal-border/50">
      <DialogTitle className="text-left">
        {/* Header com gradiente e efeitos visuais */}
        <div className="relative overflow-hidden rounded-2xl p-6 mb-4"
          style={{ 
            background: 'linear-gradient(135deg, hsl(var(--primary)) 0%, hsl(217.2 91.2% 59.8%) 100%)',
            boxShadow: '0 8px 32px hsl(var(--primary) / 0.2)'
          }}>
          
          {/* Efeito de brilho */}
          <div className="absolute top-0 left-0 w-full h-full bg-gradient-to-r from-transparent via-white/10 to-transparent 
                          transform -skew-x-12 translate-x-[-200%] animate-pulse"></div>
          
          {/* Número do chamado e título */}
          <div className="relative z-10 flex items-start gap-4">
            <div className="p-3 rounded-xl bg-white/20 backdrop-blur-sm border border-white/30 shadow-lg">
              {selectedIncident?.tipo_chamado === "Solicitação" ? (
                <Zap className="h-6 w-6 text-white drop-shadow-sm" />
              ) : selectedIncident?.tipo_chamado === "Incidente" ? (
                <AlertTriangle className="h-6 w-6 text-white drop-shadow-sm" />
              ) : (
                <Zap className="h-6 w-6 text-white drop-shadow-sm" />
              )}
            </div>
            
            <div className="flex-1">
              <div className="flex items-center gap-3 mb-2">
                <span className="text-2xl font-bold text-white drop-shadow-sm">
                  #{selectedIncident?.chamado}
                </span>
                <div className="h-1 flex-1 bg-white/20 rounded-full">
                  <div className="h-full w-3/4 bg-white/40 rounded-full"></div>
                </div>
              </div>
              
              <h2 className="text-lg font-medium text-white/95 leading-relaxed drop-shadow-sm">
                {selectedIncident?.resumo_chamado}
              </h2>
            </div>
          </div>
          
          {/* Status badges com efeitos */}
          {selectedIncident && (
            <div className="relative z-10 flex flex-wrap items-center gap-3 mt-6">
              <div className="animate-fade-in">
                <div className={`${getStatusBadgeClass(selectedIncident.chat)} flex items-center gap-2 px-4 py-2 rounded-xl 
                              backdrop-blur-sm border border-white/20 shadow-lg transform hover:scale-105 transition-all duration-200`}
                  style={{ boxShadow: 'var(--badge-shadow)' }}>
                  {getStatusIcon(selectedIncident.chat)}
                  <span className="font-medium text-sm">
                    {getStatusText(selectedIncident.chat)}
                  </span>
                </div>
              </div>
              
              <div className="animate-fade-in" style={{ animationDelay: '0.1s' }}>
                <div className="bg-white/20 text-white flex items-center gap-2 px-4 py-2 rounded-xl 
                              backdrop-blur-sm border border-white/30 shadow-lg transform hover:scale-105 transition-all duration-200">
                  <span className="font-medium text-sm">{selectedIncident.tipo_chamado}</span>
                </div>
              </div>
              
              {selectedIncident && (
                <div className="animate-fade-in" style={{ animationDelay: '0.2s' }}>
                  <div className={`${getStatusBadgeClass1(selectedIncident.acionado)} flex items-center gap-2 px-4 py-2 rounded-xl 
                                backdrop-blur-sm border border-white/20 shadow-lg transform hover:scale-105 transition-all duration-200`}
                    style={{ boxShadow: 'var(--badge-shadow)' }}>
                    {getStatusIcon1(selectedIncident.acionado)}
                    <span className="font-medium text-sm">
                      {getStatusText1(selectedIncident.acionado)}
                    </span>
                  </div>
                </div>
              )}
            </div>
          )}
        </div>
      </DialogTitle>
    </DialogHeader>

    {/* Conteúdo principal com grid melhorado */}
    {selectedIncident && (
      <div className="grid grid-cols-1 md:grid-cols-2 gap-6 mt-6">
        {/* Cards de informação com design elegante */}
        <div className="space-y-4">
          {/* Card Grupo */}
          <div className="group relative overflow-hidden rounded-xl bg-info-card-bg border border-info-card-border p-5 
                        shadow-lg hover:shadow-xl transition-all duration-300 hover:-translate-y-1">
            <div className="absolute top-0 left-0 w-full h-1 bg-gradient-to-r from-primary to-blue-500"></div>
            <div className="flex items-start gap-4">
              <div className="p-2 rounded-lg bg-primary/10 group-hover:bg-primary/20 transition-colors duration-300">
                <Group className="h-5 w-5 text-primary" />
              </div>
              <div className="flex-1">
                <p className="text-sm text-muted-foreground font-medium mb-1">Grupo Responsável</p>
                <p className="font-bold text-foreground text-lg">{selectedIncident.grupo_chamado}</p>
              </div>
            </div>
          </div>
          
          {/* Card Abertura */}
          <div className="group relative overflow-hidden rounded-xl bg-info-card-bg border border-info-card-border p-5 
                        shadow-lg hover:shadow-xl transition-all duration-300 hover:-translate-y-1">
            <div className="absolute top-0 left-0 w-full h-1 bg-gradient-to-r from-green-500 to-emerald-500"></div>
            <div className="flex items-start gap-4">
              <div className="p-2 rounded-lg bg-green-500/10 group-hover:bg-green-500/20 transition-colors duration-300">
                <Calendar className="h-5 w-5 text-green-600" />
              </div>
              <div className="flex-1">
                <p className="text-sm text-muted-foreground font-medium mb-1">Data de Abertura</p>
                <p className="font-bold text-foreground text-lg">{formatDate(selectedIncident.abertura_chamado)}</p>
              </div>
            </div>
          </div>
        </div>

        <div className="space-y-4">
          {/* Card Status */}
          <div className="group relative overflow-hidden rounded-xl bg-info-card-bg border border-info-card-border p-5 
                        shadow-lg hover:shadow-xl transition-all duration-300 hover:-translate-y-1">
            <div className="absolute top-0 left-0 w-full h-1 bg-gradient-to-r from-blue-500 to-cyan-500"></div>
            <div className="flex items-start gap-4">
              <div className="p-2 rounded-lg bg-blue-500/10 group-hover:bg-blue-500/20 transition-colors duration-300">
                <Info className="h-5 w-5 text-blue-600" />
              </div>
              <div className="flex-1">
                <p className="text-sm text-muted-foreground font-medium mb-1">Status Atual</p>
                <p className="font-bold text-foreground text-lg">{selectedIncident.status_chamado}</p>
              </div>
            </div>
          </div>

          {/* Card Severidade */}
          <div className="group relative overflow-hidden rounded-xl bg-info-card-bg border border-info-card-border p-5 
                        shadow-lg hover:shadow-xl transition-all duration-300 hover:-translate-y-1">
            <div className="absolute top-0 left-0 w-full h-1 bg-gradient-to-r from-red-500 to-orange-500"></div>
            <div className="flex items-start gap-4">
              <div className="p-2 rounded-lg bg-red-500/10 group-hover:bg-red-500/20 transition-colors duration-300">
                <Flame className="h-5 w-5 text-red-600" />
              </div>
              <div className="flex-1">
                <p className="text-sm text-muted-foreground font-medium mb-1">Nível de Severidade</p>
                <p className="font-bold text-foreground text-lg">{selectedIncident.severidade_chamado}</p>
              </div>
            </div>
          </div>
        </div>
      </div>
    )}

    {/* Rodapé com gradiente sutil */}
    <div className="mt-8 pt-4 border-t border-modal-border/50 bg-gradient-to-r from-transparent via-muted/30 to-transparent rounded-b-xl">
      <div className="text-center text-sm text-muted-foreground">
        Sistema de Gerenciamento de Chamados • Detalhes do Chamado #{selectedIncident?.chamado}
      </div>
    </div>
  </DialogContent>
</Dialog>
