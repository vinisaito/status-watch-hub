import React from "react";
import { useChamadoStore, sendWS } from "@/store/useChamadoStore";
import { AlertData } from "@/types";

interface Props {
  alert: AlertData;
}

export const ConfirmationColumn: React.FC<Props> = ({ alert }) => {
  const chamado = useChamadoStore((s) => s.chamados[alert.chamado]);

  if (!chamado) {
    return (
      <button
        className="px-3 py-1 bg-blue-600 text-white rounded"
        onClick={() => {
          useChamadoStore.getState().initChamado(alert.chamado);
          sendWS({ action: "startTimer", chamado: Number(alert.chamado) });
        }}
      >
        Iniciar
      </button>
    );
  }

  if (chamado.status === "pending") {
    return (
      <button
        className="px-3 py-1 bg-green-600 text-white rounded"
        onClick={() => {
          useChamadoStore.getState().confirmChamado(alert.chamado, "Confirmado");
          sendWS({ action: "confirmTimer", chamado: Number(alert.chamado) });
        }}
      >
        Confirmar
      </button>
    );
  }

  if (chamado.status === "confirmed") {
    return <span className="text-green-700 font-semibold">‚úÖ Confirmado</span>;
  }

  if (chamado.status === "completed") {
    return <span className="text-gray-600">üèÅ Conclu√≠do</span>;
  }

  if (chamado.status === "escalating") {
    return (
      <span className="text-orange-600">
        ‚è≥ Escalonando (N√≠vel {chamado.currentLevel}) ‚Äì {chamado.timeRemaining}s
      </span>
    );
  }

  return <span>‚Äî</span>;
};
