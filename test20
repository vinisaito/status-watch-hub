def marcar_acionado(event):
    try:
        body = json.loads(event.get('body', '{}'))
        numero_chamado = body.get('chamado')

        if numero_chamado is None:
            return {
                'statusCode': 400,
                'headers': CORS_HEADERS,
                'body': json.dumps({'message': 'chamado √© obrigat√≥rio'})
            }

        timestamp_chat = datetime.utcnow().isoformat()

        dynamodb.put_item(
            TableName=TABLE_NAME,
            Item={
                'chamado': {'N': str(numero_chamado)},
                'timestamp_chat': {'S': timestamp_chat}
            },
            ConditionExpression='attribute_not_exists(chamado)'
        )

        # üî• Dispara atualiza√ß√£o para WebSocket
        payload = {
            "action": "updateChat",  # rota WebSocket
            "chamado": numero_chamado,
            "timestamp_chat": timestamp_chat
        }
        enviar_para_websocket(payload)

        return {
            'statusCode': 200,
            'headers': CORS_HEADERS,
            'body': json.dumps({'message': 'Incidente acionado com sucesso'})
        }

    except ClientError as e:
        if e.response['Error']['Code'] == 'ConditionalCheckFailedException':
            return {
                'statusCode': 409,
                'headers': CORS_HEADERS,
                'body': json.dumps({'message': 'Incidente j√° foi acionado'})
            }
        return {
            'statusCode': 500,
            'headers': CORS_HEADERS,
            'body': json.dumps({'message': 'Erro ao salvar', 'error': str(e)})
        }