case 'next':
  if (currentLevel >= 5) {
    await Promise.all([
      updateStatusFinal(chamado, levelStatusKey, "finished"),
      updateObservacao(chamado, currentLevel, trimmedObservacao)
    ]);
    toast({
      title: "âœ… Chamado Finalizado",
      description: `Chamado ${chamado} foi finalizado com sucesso!`,
    });
  } else {
    // 1. Atualiza observaÃ§Ã£o do nÃ­vel atual
    await updateObservacao(chamado, currentLevel, trimmedObservacao);

    // 2. Dispara a funÃ§Ã£o de iniciar prÃ³ximo timer
    await onNextLevel(chamado, currentLevel + 1, trimmedObservacao);

    const nextLevelInfo = LEVEL_INFO[(currentLevel + 1) as keyof typeof LEVEL_INFO];
    toast({
      title: `ðŸš€ ${nextLevelInfo?.title} Iniciado`,
      description: `Timer de 20 minutos iniciado para ${nextLevelInfo?.title}`,
    });
  }
  break;