import os
import json
import pyodbc
import traceback
from datetime import datetime, timezone

def lambda_handler(event, context):
    print("Iniciando consulta ao banco SQL...")

    # --- Lê variáveis de ambiente ---
    server = os.environ["DB_SERVER"]
    user = os.environ["DB_USER"]
    password = os.environ["DB_PASSWORD"]
    port = os.environ.get("DB_PORT", "1433")
    database = os.environ["DB_DATABASE"]
    sql_query = os.environ["SQL_QUERY"]

    # --- Monta a string de conexão ---
    connection_string = (
        "DRIVER={ODBC Driver 18 for SQL Server};"
        f"SERVER={server},{port};"
        f"DATABASE={database};"
        f"UID={user};"
        f"PWD={password};"
        "Encrypt=yes;"
        "TrustServerCertificate=yes;"
        "Connection Timeout=30;"
    )

    print("Conectando ao banco...")

    conn = None
    cursor = None

    try:
        conn = pyodbc.connect(connection_string)
        cursor = conn.cursor()

        print(f"Executando query: {sql_query}")
        cursor.execute(sql_query)

        columns = [col[0] for col in cursor.description]
        rows = cursor.fetchall()

        print(f"{len(rows)} registros encontrados.")

        # Converte os resultados em lista de dicionários
        results = []
        for row in rows:
            item = {}
            for i, col in enumerate(columns):
                val = row[i]
                if hasattr(val, "isoformat"):
                    val = val.isoformat()
                elif isinstance(val, bytes):
                    val = val.decode("utf-8", errors="ignore")
                item[col] = val
            results.append(item)

        return {
            "statusCode": 200,
            "headers": {"Access-Control-Allow-Origin": "*"},
            "body": json.dumps(results, ensure_ascii=False)
        }

    except Exception as e:
        print("Erro ao consultar o banco:")
        print(traceback.format_exc())
        return {
            "statusCode": 500,
            "body": json.dumps({
                "error": str(e),
                "trace": traceback.format_exc()
            })
        }

    finally:
        if cursor:
            cursor.close()
        if conn:
            conn.close()
        print("Conexão encerrada.")
