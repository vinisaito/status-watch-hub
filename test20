case 'next':
  if (currentLevel >= 5) {
    // Ãºltimo nÃ­vel â†’ finaliza de vez
    await Promise.all([
      updateStatusFinal(chamado, levelStatusKey, "finished"),
      updateObservacao(chamado, currentLevel, trimmedObservacao)
    ]);
    toast({ title: "âœ… Chamado Finalizado", description: `Chamado ${chamado} foi finalizado com sucesso!` });
  } else {
    // finaliza o nÃ­vel atual
    await updateStatusFinal(chamado, levelStatusKey, "finished");
    await updateObservacao(chamado, currentLevel, trimmedObservacao);

    // avanÃ§a e abre o prÃ³ximo nÃ­vel como "running"
    await onNextLevel(chamado, currentLevel + 1, trimmedObservacao);

    const nextLevelInfo = LEVEL_INFO[(currentLevel + 1) as keyof typeof LEVEL_INFO];
    toast({
      title: `ðŸš€ ${nextLevelInfo?.title} Iniciado`,
      description: `Timer de 20 minutos iniciado para ${nextLevelInfo?.title}`,
    });
  }
  break;