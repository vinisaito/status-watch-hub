def handle_update_acionamento(event, trace, body):
    """Atualiza dados do acionamento em um level espec√≠fico do chamado"""
    chamado = int(body["chamado"])
    level = int(body.get("level", 1))

    observacao = body.get("observacao")
    pessoa_acionada = body.get("pessoaAcionada")
    status_acionamento = body.get("statusAcionamento")
    operador = body.get("operador")

    update = {}
    if observacao is not None:
        update[f"level{level}_observacao"] = observacao
    if pessoa_acionada is not None:
        update[f"level{level}_pessoaAcionada"] = pessoa_acionada
    if status_acionamento is not None:
        update[f"level{level}_statusAcionamento"] = status_acionamento
    if operador is not None:
        update[f"level{level}_operador"] = operador

    if not update:
        return {
            "statusCode": 400,
            "body": json.dumps({"error": "Nenhum campo para atualizar"}, cls=DecimalEncoder)
        }

    state = update_chamado(trace, chamado, update)

    broadcast({
        "event": "updateAcionamento",
        "chamado": chamado,
        "level": level,
        "state": state
    })

    return {
        "statusCode": 200,
        "body": json.dumps(
            {"msg": f"Dados do acionamento do level {level} atualizados"},
            cls=DecimalEncoder
        )
    }




elif route == "updateAcionamento":
    return handle_update_acionamento(event, trace, body)